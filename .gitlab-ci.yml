stages:
  - test
  - release

variables:
  POETRY_VIRTUALENVS_CREATE: "false"
  PIP_DISABLE_PIP_VERSION_CHECK: "on"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
  key: "${CI_COMMIT_REF_SLUG}"

precommit:
  stage: test
  image: python:3
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  script:
    - pip3 install pre-commit
    - pre-commit run --all-files
  cache:
    paths:
      - ${PRE_COMMIT_HOME}

test:
  stage: test
  image: python:3-slim
  before_script:
    - pip install poetry
    - poetry install
  script:
    - python manage.py test

publish_pkg:
  stage: release
  image: python:3-slim
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry config pypi-token.pypi $PYPI_API_TOKEN
    - poetry publish --build
  artifacts:
    paths:
      - dist/
